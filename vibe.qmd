---
title: "Vibe Debugging"
author: tnwei
format:
  revealjs:
    center-title-slide: true
  html:
    code-fold: true
---

## When you vibe code

You are:

- Building features faster than you could think of
- In the zone
- Locked tf in

## But then, as your app gets complex ...

- You burn through more tokens debugging your app than building it
- AI stopped taking your instructions
- How can something so smart be so stupid?

## Dedication

This is written for all of you that have just learnt the joy of coding through vibecoding, but don't know how to go further with your projects when they have errors that you can't resolve with your AI agents.

## DRAFT LINE

Do not:

Vague descriptioun
Understands how to give instructions
Understands how to lead

Follow these vibe debugging tenets

1. Give error msg to LLM to debug. LLMs don't see what you see. The more information, the more it can help you

Instead of "it don't work"
Say "I am getting a 404 not found error"

2. Copy-paste the whole stacktrace and give it to the LLM

Instead of saying "404 not found error"
Say "Here is the stacktrace resulting in a 404 not found error"

3. Tell it what other things you have tried. In general, long messages over short messages

Instead of saying "404 not found error"
Say "I tried A and B but I still get 404 not found error, here is the stacktrace"

4. If AI can't fix things for you, ask it to explain to you what is going on instead. Use a new thread to check on what is going on. It gives more information on how to prompt next! 

Instead of saying "I still get 404 not found error!"
Say "I am still getting 404 not found error. Can you explain how the previous methods are supposed to resolve them and think about why this current method is still not working?"

5. Keep a main thread troubleshooting, and use a different convo to ask about smaller things to prevent derailing the main thread

6. Use google to look up things, especially if your framework is new! Good example are when you are working with genai tooling yourself that are not in stable mode and evolve quickly

7. Read the stacktrace yourself and reason about it! Save tokens, and you debug even n better by learning how to avoid the bug in the future! The machine context length is limited but yours is always available

Run through examples of properly done debugging by various skill levels

- .env var is misspelt and thus seeing all sorts of errors, pusing satu bulatan barulah come back to find out what is going on
- simple mistake on chat apps repeating all the conversations instead of doing the 
- gnarly halfway code written and then ran out of credits where information needs to be passed from a game to another


Trinkets - 2 part QR arrays that we can use for the 
